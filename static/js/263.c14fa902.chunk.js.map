{"version":3,"file":"static/js/263.c14fa902.chunk.js","mappings":"sSAUMA,EAAkBC,EAAAA,GAAAA,IAAH,yWAwBRC,EAAY,WACvB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,OAAOC,iBAClDC,GAASJ,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,OAAOG,mBAQtD,IANAC,EAAAA,EAAAA,YAAU,WACJX,GACFE,GAASU,EAAAA,EAAAA,GAASZ,MAEnB,CAACE,EAAUF,IAEC,UAAXS,EAAoB,OAAO,SAAC,IAAD,IAE/B,GAAIL,GAAYJ,EAAI,CAClB,IAAQa,EAAoBT,EAApBS,MAAOC,EAAaV,EAAbU,SACTC,EAAcC,EAAAA,GAAAA,MAAuB,SAACC,EAAMC,GAAP,OAAiBA,KAAWlB,KACvE,OACE,UAACH,EAAD,YACE,wBAAKgB,KACL,gBAAKM,IAAKL,EAAUM,IAAI,WACxB,uBAAIL,KACJ,SAAC,IAAD,WACE,SAAC,KAAD,CAAMM,GAAG,IAAT,UACE,0GAOV,OAAO,SAAC,IAAD","sources":["components/FullPizza/index.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { descriptionPizzas } from '../../common/constans';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hook';\r\nimport { getPizza } from '../../redux/slice/getPizzaAsyncThunk';\r\nimport { ButtonStyled } from '../ButtonStyled';\r\nimport { NotFoundBlock } from '../NotFoundBlock';\r\nimport { Spinner } from '../spinners/spinner';\r\n\r\nconst FullPizzaStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  max-width: 50%;\r\n  padding: 30px 0;\r\n  h4 {\r\n    font-size: 24px;\r\n    margin-bottom: 25px;\r\n  }\r\n\r\n  img {\r\n    max-width: 50%;\r\n    min-width: 150px;\r\n    margin-bottom: 15px;\r\n  }\r\n  p {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const FullPizza = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useAppDispatch();\r\n  const pizzaObj = useAppSelector((state) => state.pizzas.fullPizzaById);\r\n  const status = useAppSelector((state) => state.pizzas.statusFullPizza);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getPizza(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  if (status === 'error') return <NotFoundBlock />;\r\n\r\n  if (pizzaObj && id) {\r\n    const { title, imageUrl } = pizzaObj;\r\n    const description = descriptionPizzas.find((item, index) => index === +id);\r\n    return (\r\n      <FullPizzaStyled>\r\n        <h4>{title}</h4>\r\n        <img src={imageUrl} alt=\"Pizza\" />\r\n        <p>{description}</p>\r\n        <ButtonStyled>\r\n          <Link to=\"/\">\r\n            <span>к выбору пицц</span>\r\n          </Link>\r\n        </ButtonStyled>\r\n      </FullPizzaStyled>\r\n    );\r\n  }\r\n\r\n  return <Spinner />;\r\n};\r\n"],"names":["FullPizzaStyled","styled","FullPizza","id","useParams","dispatch","useAppDispatch","pizzaObj","useAppSelector","state","pizzas","fullPizzaById","status","statusFullPizza","useEffect","getPizza","title","imageUrl","description","descriptionPizzas","item","index","src","alt","to"],"sourceRoot":""}