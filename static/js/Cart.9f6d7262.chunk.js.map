{"version":3,"file":"static/js/Cart.9f6d7262.chunk.js","mappings":"kQAEaA,EAAoBC,EAAAA,GAAAA,OAAH,qYAQX,SAACC,GAAD,OAAWA,EAAMC,M,SCHvBC,EAAoC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAClD,OACE,SAACL,EAAD,CAAmBG,GAAG,OAAOG,QAAS,kBAAMD,KAA5C,UACE,iH,UCRAE,EAAqBN,EAAAA,GAAAA,IAAH,sGAOXO,EAAe,WAC1B,OACE,SAACD,EAAD,WACE,gBAAKE,QAAQ,YAAYC,MAAM,6BAA/B,UACE,eAAGC,GAAG,cAAN,WACE,iBAAMC,EAAE,6FACR,iBAAMA,EAAE,gGACR,iBAAMA,EAAE,8LACR,iBAAMA,EAAE,8W,UCXZC,EAAkBZ,EAAAA,GAAAA,IAAH,6KAWRa,EAAgB,WAC3B,OACE,+BACE,UAACD,EAAD,YACE,8GACiB,+CAEjB,6PAEE,kBAFF,wTAMA,SAACL,EAAD,KACA,SAACO,EAAA,EAAD,WACE,SAAC,KAAD,CAAMC,GAAG,IAAT,UACE,kH,UC9BNC,EAAiBhB,EAAAA,GAAAA,IAAH,gFACE,SAACC,GAAD,OAAWA,EAAMgB,UACjB,SAAChB,GAAD,OAAYA,EAAMiB,OAAS,MAAQ,MAQ5CC,EAA8B,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACpD,OACE,+BACE,SAACF,EAAD,CACEC,OAAQA,EACRC,OAAQA,EACRE,OAAO,KACPZ,QAAQ,YACRa,MAAM,KACNZ,MAAM,6BANR,UAOE,iBACEa,KAAK,QACLX,EAAE,wcACFY,SAAS,iBCvBbC,EAAuBxB,EAAAA,GAAAA,IAAH,iTAyBbyB,EAA0C,SAAC,GAA0B,IAAxBrB,EAAuB,EAAvBA,iBACxD,OACE,SAACoB,EAAD,CAAsBnB,QAAS,kBAAMD,KAArC,UACE,iBAAKI,QAAQ,YAAYC,MAAM,6BAA/B,WACE,sBACA,cAAG,YAAU,WAAWC,GAAG,WAA3B,UACE,iBAAMC,EAAE,2KChCLe,EAAwB1B,EAAAA,GAAAA,IAAH,6XCArB2B,EAAkB3B,EAAAA,GAAAA,IAAH,2lCCAf4B,EAAmB5B,EAAAA,GAAAA,IAAH,8FCYhB6B,EAAgC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,aAAc1B,EAAuB,EAAvBA,iBAItD2B,GAASC,EAAAA,EAAAA,IAAU,CACvBC,SAAU,SAACC,GACTC,QAAQC,IAAIF,GACZ9B,IACAiC,MAAM,qIAERC,cAAe,CACbC,UAAW,EACXC,kBAAmB,EACnBC,KAAM,GACNC,MAAO,GACPC,cAAe,MAInB,OAAIb,GAEA,SAACH,EAAD,WACE,kBAAMM,SAAUF,EAAOa,aAAvB,WACE,mLACA,0BACE,wBAxBS,CAAC,yDAAa,yFAAoB,qGAyB7BC,KAAI,SAACN,EAAWO,GAAZ,OACd,2BACE,kBACEpC,GAAE,UAAKoC,GACPC,KAAK,QACLN,KAAK,QACLO,MAAOjB,EAAOkB,OAAOV,UACrBW,SAAU,kBAAMnB,EAAOoB,cAAc,YAAaL,IAClDM,QAASrB,EAAOkB,OAAOV,YAAcO,KAEvC,kBAAOO,QAAO,UAAKP,GAAnB,SAA6BP,MATtBO,WAef,SAACrB,EAAD,CAAgBrB,iBAAkBA,KAElC,UAACwB,EAAD,YACE,2EACA,kBACE0B,UAAQ,EACRP,KAAK,OACLC,MAAOjB,EAAOkB,OAAOR,KACrBS,SAAU,SAACK,GAAD,OACRxB,EAAOoB,cAAc,OAAQI,EAAEC,OAAOR,WAG1C,0EACA,kBACEM,UAAQ,EACRP,KAAK,OACLC,MAAOjB,EAAOkB,OAAOP,MACrBQ,SAAU,SAACK,GAAD,OACRxB,EAAOoB,cAAc,QAASI,EAAEC,OAAOR,UAGd,IAA5BjB,EAAOkB,OAAOV,YACb,iCACE,+GACA,kBACEQ,KAAK,OACLO,UAAQ,EACRN,MAAOjB,EAAOkB,OAAON,cACrBO,SAAU,SAACK,GAAD,OACRxB,EAAOoB,cAAc,gBAAiBI,EAAEC,OAAOR,gBAMxDjB,EAAOkB,OAAOV,UAAY,IACzB,SAACb,EAAD,WACE,wBA7Ec,CAAC,4DAAgB,iGAAuB,6DA8EjCmB,KAAI,SAACY,EAASX,GAAV,OACrB,2BACE,kBACEpC,GAAI+C,EACJV,KAAK,QACLN,KAAK,aACLO,MAAOjB,EAAOkB,OAAOT,kBACrBU,SAAU,kBAAMnB,EAAOoB,cAAc,oBAAqBL,IAC1DM,QAASrB,EAAOkB,OAAOT,oBAAsBM,KAE/C,kBAAOO,QAASI,EAAhB,SAA0BA,MATnBX,WAgBjB,UAAC/C,EAAD,CAAmBgD,KAAK,SAAxB,WACE,gFACA,SAAC5B,EAAD,CAAUF,OAAQ,eAKd,yBCnHVyC,EAAkB1D,EAAAA,GAAAA,IAAH,4GAWR2D,EAAgC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC9C,OACE,SAACF,EAAD,CAAiBrD,QAAS,kBAAMuD,KAAhC,UACE,iBACEC,iBAAiB,gBACjBnD,GAAG,YACHoD,QAAQ,MACRtD,QAAQ,YACRC,MAAM,6BALR,WAME,qBACA,0BACE,mBACEsD,GAAG,KACHC,GAAG,KACH1C,KAAK,OACL2C,EAAE,KACFC,OAAO,UACPC,eAAe,QACfC,iBAAiB,KACjBC,YAAY,OAEd,iBACE/C,KAAK,OACL4C,OAAO,UACPC,eAAe,QACfC,iBAAiB,KACjBC,YAAY,IACZC,GAAG,IACHC,GAAG,KACHC,GAAG,IACHC,GAAG,QAEL,iBACEnD,KAAK,OACL4C,OAAO,UACPC,eAAe,QACfC,iBAAiB,KACjBC,YAAY,IACZC,GAAG,KACHC,GAAG,IACHC,GAAG,IACHC,GAAG,gB,oBCpDFC,EAAa1E,EAAAA,GAAAA,IAAH,qTCajB2E,EAAiB3E,EAAAA,GAAAA,IAAH,0JAOd4E,EAAiB5E,EAAAA,GAAAA,IAAH,wKAUd6E,GAAmB7E,EAAAA,GAAAA,IAAH,uFAMhB8E,GAAY9E,EAAAA,GAAAA,IAAH,0JAUT+E,GAAuB/E,EAAAA,GAAAA,IAAH,qGAQpBgF,GAAgBhF,EAAAA,GAAAA,IAAH,oEASNiF,GAA8B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtCC,GAAWC,EAAAA,EAAAA,KACTC,EAA4DH,EAA5DG,SAAUC,EAAkDJ,EAAlDI,MAAOC,EAA2CL,EAA3CK,MAAOC,EAAoCN,EAApCM,eAAgBC,EAAoBP,EAApBO,KAAMC,EAAcR,EAAdQ,MAAOhF,EAAOwE,EAAPxE,GAEvDiF,EADiBH,EAAeI,MAAM,IACV,GAalC,OACE,UAACjB,EAAD,YACE,UAACC,EAAD,YACE,SAACE,GAAD,WACE,gBAAKe,IAAKR,EAAUS,IAAI,gBAE1B,UAACf,GAAD,YACE,wBAAKO,KAEL,4BACGS,EAAAA,IAAWJ,GADd,KAC6BF,EAD7B,yBAKJ,UAACZ,GAAD,YACE,SAACH,EAAD,CAAYrE,QAAS,kBAzBzB8E,GAASa,EAAAA,EAAAA,IAAcd,SACvBC,GAASc,EAAAA,EAAAA,IAAcP,KAwBnB,gBACA,0BAAOH,KACP,SAACb,EAAD,CAAYrE,QAAS,kBAAM8E,GAASe,EAAAA,EAAAA,IAAe,CAAExF,GAAAA,EAAI8E,eAAAA,EAAgBE,MAAAA,MAAzE,mBAIF,SAACV,GAAD,WACE,4BAAOU,EAAQH,EAAf,UAGF,SAAC5B,EAAD,CAAWC,YAAa,kBA9B1BuB,GAASgB,EAAAA,EAAAA,IAAmB,CAAEzF,GAAAA,EAAI8E,eAAAA,EAAgBE,MAAAA,KAClDP,GAASiB,EAAAA,EAAAA,YACTjB,GAASkB,EAAAA,EAAAA,cC9EPC,GAAoBtG,EAAAA,GAAAA,IAAH,yDAKVuG,GAAc,WACzB,OACE,SAACD,GAAD,CACEE,YAAY,OACZpF,OAAO,OACP0C,QAAQ,MACRtD,QAAQ,YACRa,MAAM,OACNZ,MAAM,6BANR,UAOE,cAAGC,GAAG,UAAN,UACE,0BACE,iBAAMC,EAAE,8tBACR,mBAAQoD,GAAG,MAAMC,GAAG,OAAOC,EAAE,SAC7B,mBAAQF,GAAG,OAAOC,GAAG,OAAOC,EAAE,gBCZlCwC,GAAkBzG,EAAAA,GAAAA,IAAH,qSAcf0G,GAAkB1G,EAAAA,GAAAA,IAAH,0SAkBR2G,GAAY,WACvB,IAAMxB,GAAWC,EAAAA,EAAAA,KACjB,OACE,UAACqB,GAAD,YACE,SAAC3F,EAAA,EAAD,WACE,UAAC,KAAD,CAAMC,GAAG,IAAT,WACE,SAACI,EAAD,KACA,2JAIJ,UAACuF,GAAD,YACE,4BACE,SAACH,GAAD,KACA,6EAGF,iBAAMlG,QAAS,kBAAM8E,GAASyB,EAAAA,EAAAA,QAA9B,qEC/CFC,GAAgB7G,EAAAA,GAAAA,IAAH,wNAcb8G,GAAa9G,EAAAA,GAAAA,IAAH,oEAKH+G,GAAW,WACtB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOlF,EAAP,KAAqBmF,EAArB,KACA,GAA8CC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,QAAtEC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,WAE/B,IAAKF,EAASG,OACZ,OAAO,SAAC3G,EAAD,IAGT,IAAMT,EAAmB,WACvB6G,GAAgB,SAACQ,GAAD,OAAWA,MAE7B,OACE,UAACZ,GAAD,YACE,SAACF,GAAD,KACA,SAACG,GAAD,UACGO,EAASxE,KAAI,SAACqC,EAASpC,GAAV,OACZ,SAACmC,GAAD,CAAsBC,QAASA,GAAhBpC,SAGnB,0GACkBwE,EADlB,6DAC4CC,EAD5C,aAGA,SAACpH,EAAD,CAAaC,iBAAkBA,KAE/B,SAACyB,EAAD,CAAWC,aAAcA,EAAc1B,iBAAkBA","sources":["components/ButtonOrder/ButtonOrderStyled.ts","components/ButtonOrder/index.tsx","assets/svg/CartEmptySVG.tsx","components/cartEmpty/index.tsx","assets/svg/arrowSvg.tsx","assets/svg/CloseButtonSvg.tsx","components/OrderForm/ChoiceRestorantStyled.ts","components/OrderForm/OrderFormStyled.ts","components/OrderForm/PickupForm.tsx","components/OrderForm/index.tsx","assets/svg/DeleteSvg.tsx","components/Cart/ButtonCart.ts","components/Cart/CartItem.tsx","assets/svg/CartIconSvg.tsx","components/Cart/CartTitle.tsx","components/Cart/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ButtonOrderStyled = styled.button<{ mb?: string }>`\r\n  background-color: #fe5f1e;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 10px;\r\n  max-width: fit-content;\r\n  padding: 10px 20px;\r\n  border-radius: 30px;\r\n  margin-bottom: ${(props) => props.mb};\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  border: transparent;\r\n  span {\r\n    color: #fff;\r\n    font-weight: 600;\r\n  }\r\n  &:hover {\r\n    background-color: #f24701;\r\n  }\r\n`;\r\n","import { FC } from 'react';\r\nimport { ButtonOrderStyled } from './ButtonOrderStyled';\r\n\r\ninterface ButtonOrderProps {\r\n  handleClickOrder: () => void;\r\n}\r\n\r\nexport const ButtonOrder: FC<ButtonOrderProps> = ({ handleClickOrder }) => {\r\n  return (\r\n    <ButtonOrderStyled mb=\"30px\" onClick={() => handleClickOrder()}>\r\n      <span>–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</span>\r\n    </ButtonOrderStyled>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst CartEmptySvgStyled = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: 0 auto;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const CartEmptySvg = () => {\r\n  return (\r\n    <CartEmptySvgStyled>\r\n      <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g id=\"cart-delete\">\r\n          <path d=\"M8,17a2,2,0,1,0,2,2A2.002,2.002,0,0,0,8,17Zm0,3a1,1,0,1,1,1-1A1.0013,1.0013,0,0,1,8,20Z\" />\r\n          <path d=\"M18,17a2,2,0,1,0,2,2A2.002,2.002,0,0,0,18,17Zm0,3a1,1,0,1,1,1-1A1.0013,1.0013,0,0,1,18,20Z\" />\r\n          <path d=\"M14.353,10.646a.5.5,0,1,1-.707.707L12.5,10.207l-1.147,1.147a.5.5,0,0,1-.707-.707L11.793,9.5,10.6465,8.3535a.5.5,0,0,1,.707-.707L12.5,8.793l1.1465-1.1465a.5.5,0,0,1,.707.707L13.207,9.5Z\" />\r\n          <path d=\"M21.7505,7.7759l-.5557,5A2.4979,2.4979,0,0,1,18.71,15H8.5A2.503,2.503,0,0,1,6,12.5v-5A1.5017,1.5017,0,0,0,4.5,6h-2a.5.5,0,0,1,0-1h2A2.503,2.503,0,0,1,7,7.5v5A1.5017,1.5017,0,0,0,8.5,14H18.71a1.4986,1.4986,0,0,0,1.4907-1.3345l.5556-5a1.5023,1.5023,0,0,0-.373-1.166A1.482,1.482,0,0,0,19.2656,6H16.5a.5.5,0,0,1,0-1h2.7656a2.5008,2.5008,0,0,1,2.4849,2.7759Z\" />\r\n        </g>\r\n      </svg>\r\n    </CartEmptySvgStyled>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { CartEmptySvg } from '../../assets/svg/CartEmptySVG';\r\nimport { ButtonStyled } from '../ButtonStyled';\r\n\r\nconst CartEmptyStyled = styled.div`\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  h2 {\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const CartEmpty: FC = () => {\r\n  return (\r\n    <>\r\n      <CartEmptyStyled>\r\n        <h2>\r\n          –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è <span>üòï</span>\r\n        </h2>\r\n        <p>\r\n          –í–µ—Ä–æ—è—Ç–Ω–µ–π –≤—Å–µ–≥–æ, –≤—ã –Ω–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏ –µ—â—ë –ø–∏—Ü—Ü—É.\r\n          <br />\r\n          –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É, –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.\r\n        </p>\r\n\r\n        <CartEmptySvg />\r\n        <ButtonStyled>\r\n          <Link to=\"/\">\r\n            <span>–í—ã–±—Ä–∞—Ç—å –ø–∏—Ü—Ü—É</span>\r\n          </Link>\r\n        </ButtonStyled>\r\n      </CartEmptyStyled>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ArrowSvgStyled = styled.svg<{ rotate?: number; active?: boolean }>`\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n  background-color: ${(props) => (props.active ? 'red' : '')};\r\n`;\r\n\r\ninterface ArrowSvgProps {\r\n  rotate?: number;\r\n  active?: boolean;\r\n}\r\n\r\nexport const ArrowSvg: FC<ArrowSvgProps> = ({ rotate, active }) => {\r\n  return (\r\n    <>\r\n      <ArrowSvgStyled\r\n        rotate={rotate}\r\n        active={active}\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          fill=\"white\"\r\n          d=\"M12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 Z M12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 Z M10.4142136,11 L17,11 L17,13 L10.4142136,13 L12.7071068,15.2928932 L11.2928932,16.7071068 L6.58578644,12 L11.2928932,7.29289322 L12.7071068,8.70710678 L10.4142136,11 Z\"\r\n          fillRule=\"evenodd\"\r\n        />\r\n      </ArrowSvgStyled>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CloseButtonSvgStyled = styled.div`\r\n  position: absolute;\r\n  top: -9%;\r\n  right: -6%;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: #fff;\r\n    width: 30px;\r\n    height: 30px;\r\n    transition: all 0.3s;\r\n    &:hover {\r\n      fill: #fe5f1e;\r\n    }\r\n  }\r\n  @media (max-width: 570px) {\r\n    top: -11%;\r\n    right: 47%;\r\n  }\r\n`;\r\n\r\ninterface CloseButtonSvgProps {\r\n  handleClickOrder: () => void;\r\n}\r\n\r\nexport const CloseButtonSvg: FC<CloseButtonSvgProps> = ({ handleClickOrder }) => {\r\n  return (\r\n    <CloseButtonSvgStyled onClick={() => handleClickOrder()}>\r\n      <svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title />\r\n        <g data-name=\"Layer 57\" id=\"Layer_57\">\r\n          <path d=\"M18.83,16l8.59-8.59a2,2,0,0,0-2.83-2.83L16,13.17,7.41,4.59A2,2,0,0,0,4.59,7.41L13.17,16,4.59,24.59a2,2,0,1,0,2.83,2.83L16,18.83l8.59,8.59a2,2,0,0,0,2.83-2.83Z\" />\r\n        </g>\r\n      </svg>\r\n    </CloseButtonSvgStyled>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ChoiceRestorantStyled = styled.div`\r\n  ul {\r\n    display: flex;\r\n    column-gap: 20px;\r\n    justify-content: space-around;\r\n\r\n    padding-bottom: 30px;\r\n\r\n    input {\r\n      display: none;\r\n    }\r\n    label {\r\n      cursor: pointer;\r\n    }\r\n\r\n    input:checked + label {\r\n      background-color: #fe5f1e;\r\n      padding: 10px 15px;\r\n      color: white;\r\n      border-radius: 30px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const OrderFormStyled = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(24, 24, 27, 0.5);\r\n  z-index: 2;\r\n  & > form {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    min-width: 300px;\r\n    width: 500px;\r\n    min-height: 300px;\r\n    border-radius: 30px;\r\n    padding: 20px;\r\n    text-align: center;\r\n    background-color: #ffdf8c;\r\n\r\n    & > span {\r\n      font-size: 28px;\r\n      padding-bottom: 30px;\r\n    }\r\n    & div:first-of-type {\r\n      height: 90%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      ul {\r\n        display: grid;\r\n        row-gap: 20px;\r\n        padding-bottom: 20px;\r\n\r\n        input {\r\n          display: none;\r\n        }\r\n        label {\r\n          cursor: pointer;\r\n        }\r\n\r\n        input:checked + label {\r\n          background-color: #fe5f1e;\r\n          padding: 10px 15px;\r\n          color: white;\r\n          border-radius: 30px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const PickupFormStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 30px;\r\n`;\r\n","import { useFormik } from 'formik';\r\nimport { FC } from 'react';\r\nimport { ArrowSvg } from '../../assets/svg/arrowSvg';\r\nimport { CloseButtonSvg } from '../../assets/svg/CloseButtonSvg';\r\nimport { ButtonOrderStyled } from '../ButtonOrder/ButtonOrderStyled';\r\nimport { ChoiceRestorantStyled } from './ChoiceRestorantStyled';\r\nimport { OrderFormStyled } from './OrderFormStyled';\r\nimport { PickupFormStyled } from './PickupForm';\r\n\r\ninterface OrderFormProps {\r\n  orderVisible: boolean;\r\n  handleClickOrder: () => void;\r\n}\r\n\r\nexport const OrderForm: FC<OrderFormProps> = ({ orderVisible, handleClickOrder }) => {\r\n  const orderTypes = ['–°–∞–º–æ–≤—ã–≤–æ–∑', '–ü–æ–µ–º –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ', '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º'];\r\n  const restaurantAddress = ['–£—Ä–∞–ª—å—Å–∫–∞—è 43', '–ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç 16', '–°–æ—Ñ–∏–π—Å–∫–∞—è 37'];\r\n  const customerInfo = ['–í–∞—à–µ –∏–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω'];\r\n  const formik = useFormik({\r\n    onSubmit: (data) => {\r\n      console.log(data);\r\n      handleClickOrder();\r\n      alert('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');\r\n    },\r\n    initialValues: {\r\n      orderType: 0,\r\n      addressRestaurant: 0,\r\n      name: '',\r\n      phone: '',\r\n      addressPickup: '',\r\n    },\r\n  });\r\n\r\n  if (orderVisible) {\r\n    return (\r\n      <OrderFormStyled>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <span>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ</span>\r\n          <div>\r\n            <ul>\r\n              {orderTypes.map((orderType, index) => (\r\n                <li key={index}>\r\n                  <input\r\n                    id={`${index}`}\r\n                    type=\"radio\"\r\n                    name=\"order\"\r\n                    value={formik.values.orderType}\r\n                    onChange={() => formik.setFieldValue('orderType', index)}\r\n                    checked={formik.values.orderType === index}\r\n                  />\r\n                  <label htmlFor={`${index}`}>{orderType}</label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <CloseButtonSvg handleClickOrder={handleClickOrder} />\r\n\r\n          <PickupFormStyled>\r\n            <span>–í–∞—à–µ –∏–º—è</span>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={formik.values.name}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                formik.setFieldValue('name', e.target.value)\r\n              }\r\n            />\r\n            <span>–¢–µ–ª–µ—Ñ–æ–Ω</span>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={formik.values.phone}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                formik.setFieldValue('phone', e.target.value)\r\n              }\r\n            />\r\n            {formik.values.orderType === 2 && (\r\n              <>\r\n                <span>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</span>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={formik.values.addressPickup}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                    formik.setFieldValue('addressPickup', e.target.value)\r\n                  }\r\n                />\r\n              </>\r\n            )}\r\n          </PickupFormStyled>\r\n          {formik.values.orderType < 2 && (\r\n            <ChoiceRestorantStyled>\r\n              <ul>\r\n                {restaurantAddress.map((address, index) => (\r\n                  <li key={index}>\r\n                    <input\r\n                      id={address}\r\n                      type=\"radio\"\r\n                      name=\"restaurant\"\r\n                      value={formik.values.addressRestaurant}\r\n                      onChange={() => formik.setFieldValue('addressRestaurant', index)}\r\n                      checked={formik.values.addressRestaurant === index}\r\n                    />\r\n                    <label htmlFor={address}>{address}</label>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </ChoiceRestorantStyled>\r\n          )}\r\n\r\n          <ButtonOrderStyled type=\"submit\">\r\n            <span>–ó–∞–∫–∞–∑–∞—Ç—å</span>\r\n            <ArrowSvg rotate={180} />\r\n          </ButtonOrderStyled>\r\n        </form>\r\n      </OrderFormStyled>\r\n    );\r\n  } else return <></>;\r\n};\r\n","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DeleteSvgStyled = styled.div`\r\n  min-width: 40px;\r\n  min-height: 40px;\r\n  align-self: center;\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface DeleteSvgProps {\r\n  handleClick: () => void;\r\n}\r\n\r\nexport const DeleteSvg: FC<DeleteSvgProps> = ({ handleClick }) => {\r\n  return (\r\n    <DeleteSvgStyled onClick={() => handleClick()}>\r\n      <svg\r\n        enableBackground=\"new 0 0 32 32\"\r\n        id=\"Stock_cut\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 32 32\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <desc />\r\n        <g>\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"16\"\r\n            fill=\"none\"\r\n            r=\"15\"\r\n            stroke=\"#000000\"\r\n            strokeLinejoin=\"round\"\r\n            strokeMiterlimit=\"10\"\r\n            strokeWidth=\"2\"\r\n          />\r\n          <line\r\n            fill=\"none\"\r\n            stroke=\"#000000\"\r\n            strokeLinejoin=\"round\"\r\n            strokeMiterlimit=\"10\"\r\n            strokeWidth=\"2\"\r\n            x1=\"8\"\r\n            x2=\"24\"\r\n            y1=\"8\"\r\n            y2=\"24\"\r\n          />\r\n          <line\r\n            fill=\"none\"\r\n            stroke=\"#000000\"\r\n            strokeLinejoin=\"round\"\r\n            strokeMiterlimit=\"10\"\r\n            strokeWidth=\"2\"\r\n            x1=\"24\"\r\n            x2=\"8\"\r\n            y1=\"8\"\r\n            y2=\"24\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </DeleteSvgStyled>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const ButtonCart = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nwidth: 40px;\r\nheight: 40px;\r\nborder: 1px solid #fe5f1e;\r\nborder-radius: 50%;\r\ncolor: #fe5f1e;\r\npadding-bottom: 3px;\r\ncursor: pointer;\r\nuser-select: none;\r\n&:active {\r\n  background-color: #fe5f1e;\r\n  color: #ffffff;\r\n}\r\n\r\n`\r\n","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DeleteSvg } from '../../assets/svg/DeleteSvg';\r\nimport { typeNames } from '../../common/constans';\r\nimport { ItemCart } from '../../common/types';\r\nimport { useAppDispatch } from '../../redux/hooks/hook';\r\nimport {\r\n  addItemToCart,\r\n  deleteItemCart,\r\n  deleteSelectedItem,\r\n  getTotalPizzas,\r\n  getTotalPrice,\r\n  sumTotalPrice,\r\n} from '../../redux/slice/cartSlice';\r\nimport { ButtonCart } from './ButtonCart';\r\n\r\nconst CartItemStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px 0;\r\n  border-bottom: 1px solid #f6f6f6;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ItemInfoStyled = styled.div`\r\n  display: flex;\r\n  min-width: 410px;\r\n  @media (max-width: 540px) {\r\n    min-width: 300px;\r\n  }\r\n\r\n  font-size: 24px;\r\n  align-items: center;\r\n`;\r\nconst ItemChoiceStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 20px;\r\n`;\r\n\r\nconst DivForImg = styled.div`\r\n  display: flex;\r\n  height: 80px;\r\n  text-align: center;\r\n  width: 80px;\r\n  margin-right: 10px;\r\n  img {\r\n    font-size: 0;\r\n  }\r\n`;\r\nconst ItemPropertiesStyled = styled.div`\r\n  text-align: start;\r\n  span {\r\n    font-size: 18px;\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nconst CartItemPrice = styled.div`\r\n  min-width: 120px;\r\n  align-self: center;\r\n`;\r\n\r\ninterface CartItemProps {\r\n  cartObj: ItemCart;\r\n}\r\n\r\nexport const CartItem: FC<CartItemProps> = ({ cartObj }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { imageUrl, title, count, itemPropertyId, size, price, id } = cartObj;\r\n  const itemProperties = itemPropertyId.split('');\r\n  const itemNameId = itemProperties[0];\r\n\r\n  const hahdlerClickButtonCart = () => {\r\n    dispatch(addItemToCart(cartObj));\r\n    dispatch(sumTotalPrice(price));\r\n  };\r\n\r\n  const handleClickDeleteBtoon = () => {\r\n    dispatch(deleteSelectedItem({ id, itemPropertyId, price }));\r\n    dispatch(getTotalPrice());\r\n    dispatch(getTotalPizzas());\r\n  };\r\n\r\n  return (\r\n    <CartItemStyled>\r\n      <ItemInfoStyled>\r\n        <DivForImg>\r\n          <img src={imageUrl} alt=\"item-img\" />\r\n        </DivForImg>\r\n        <ItemPropertiesStyled>\r\n          <h4>{title}</h4>\r\n\r\n          <span>\r\n            {typeNames[+itemNameId]}, {size}—Å–º\r\n          </span>\r\n        </ItemPropertiesStyled>\r\n      </ItemInfoStyled>\r\n      <ItemChoiceStyled>\r\n        <ButtonCart onClick={() => hahdlerClickButtonCart()}>+</ButtonCart>\r\n        <span>{count}</span>\r\n        <ButtonCart onClick={() => dispatch(deleteItemCart({ id, itemPropertyId, price }))}>\r\n          -\r\n        </ButtonCart>\r\n      </ItemChoiceStyled>\r\n      <CartItemPrice>\r\n        <span>{price * count}p</span>\r\n      </CartItemPrice>\r\n\r\n      <DeleteSvg handleClick={() => handleClickDeleteBtoon()} />\r\n    </CartItemStyled>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst CartIconSvgStyled = styled.svg`\r\n  width: 80px;\r\n  height: 80px;\r\n`;\r\n\r\nexport const CartIconSvg = () => {\r\n  return (\r\n    <CartIconSvgStyled\r\n      baseProfile=\"tiny\"\r\n      height=\"24px\"\r\n      version=\"1.2\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g id=\"Layer_1\">\r\n        <g>\r\n          <path d=\"M20.756,5.345C20.565,5.126,20.29,5,20,5H6.181L5.986,3.836C5.906,3.354,5.489,3,5,3H2.75c-0.553,0-1,0.447-1,1    s0.447,1,1,1h1.403l1.86,11.164c0.008,0.045,0.031,0.082,0.045,0.124c0.016,0.053,0.029,0.103,0.054,0.151    c0.032,0.066,0.075,0.122,0.12,0.179c0.031,0.039,0.059,0.078,0.095,0.112c0.058,0.054,0.125,0.092,0.193,0.13    c0.038,0.021,0.071,0.049,0.112,0.065C6.748,16.972,6.87,17,6.999,17C7,17,18,17,18,17c0.553,0,1-0.447,1-1s-0.447-1-1-1H7.847    l-0.166-1H19c0.498,0,0.92-0.366,0.99-0.858l1-7C21.031,5.854,20.945,5.563,20.756,5.345z M18.847,7l-0.285,2H15V7H18.847z M14,7    v2h-3V7H14z M14,10v2h-3v-2H14z M10,7v2H7C6.947,9,6.899,9.015,6.852,9.03L6.514,7H10z M7.014,10H10v2H7.347L7.014,10z M15,12v-2    h3.418l-0.285,2H15z\" />\r\n          <circle cx=\"8.5\" cy=\"19.5\" r=\"1.5\" />\r\n          <circle cx=\"17.5\" cy=\"19.5\" r=\"1.5\" />\r\n        </g>\r\n      </g>\r\n    </CartIconSvgStyled>\r\n  );\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { ArrowSvg } from '../../assets/svg/arrowSvg';\r\nimport { CartIconSvg } from '../../assets/svg/CartIconSvg';\r\nimport { useAppDispatch } from '../../redux/hooks/hook';\r\nimport { cartClear } from '../../redux/slice/cartSlice';\r\nimport { ButtonStyled } from '../ButtonStyled';\r\n\r\nconst CartTitleStyled = styled.div`\r\n  display: flex;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #fff;\r\n  z-index: 1;\r\n  font-size: 49px;\r\n  padding: 30px 0;\r\n  border-bottom: 1px solid #f6f6f6;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  row-gap: 40px;\r\n`;\r\nconst CartTitleBottom = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 24px;\r\n  flex-wrap: wrap;\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 46px;\r\n    font-weight: normal;\r\n    & + span {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CartTitle = () => {\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <CartTitleStyled>\r\n      <ButtonStyled>\r\n        <Link to=\"/\">\r\n          <ArrowSvg />\r\n          <span> –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤</span>\r\n        </Link>\r\n      </ButtonStyled>\r\n\r\n      <CartTitleBottom>\r\n        <div>\r\n          <CartIconSvg />\r\n          <span>–ö–æ—Ä–∑–∏–Ω–∞</span>\r\n        </div>\r\n\r\n        <span onClick={() => dispatch(cartClear())}>–û—á–∏—Å—Ç–∏—Ç—å</span>\r\n      </CartTitleBottom>\r\n    </CartTitleStyled>\r\n  );\r\n};\r\n","import { FC, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../redux/hooks/hook';\r\nimport { ButtonOrder } from '../ButtonOrder';\r\n\r\nimport { CartEmpty } from '../cartEmpty';\r\nimport { OrderForm } from '../OrderForm';\r\nimport { CartItem } from './CartItem';\r\nimport { CartTitle } from './CartTitle';\r\n\r\nconst CartContainer = styled.div`\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n\r\n  & > span {\r\n    display: inline-block;\r\n    font-size: 26px;\r\n    opacity: 0.7;\r\n    margin-bottom: 40px;\r\n  }\r\n  @media (max-width: 540px) {\r\n  }\r\n`;\r\n\r\nconst CartStyled = styled.div`\r\n  font-size: 36px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Cart: FC = () => {\r\n  const [orderVisible, setOrderVisible] = useState(false);\r\n  const { dataCart, totalPizzas, totalPrice } = useAppSelector((state) => state.cart);\r\n\r\n  if (!dataCart.length) {\r\n    return <CartEmpty />;\r\n  }\r\n\r\n  const handleClickOrder = () => {\r\n    setOrderVisible((prev) => !prev);\r\n  };\r\n  return (\r\n    <CartContainer>\r\n      <CartTitle />\r\n      <CartStyled>\r\n        {dataCart.map((cartObj, index) => (\r\n          <CartItem key={index} cartObj={cartObj} />\r\n        ))}\r\n      </CartStyled>\r\n      <span>\r\n        –í—Å–µ–≥–æ –ø–æ–∑–∏—Ü–∏–π: {totalPizzas}—à—Ç. –Ω–∞ —Å—É–º–º—É {totalPrice}—Ä\r\n      </span>\r\n      <ButtonOrder handleClickOrder={handleClickOrder} />\r\n\r\n      <OrderForm orderVisible={orderVisible} handleClickOrder={handleClickOrder} />\r\n    </CartContainer>\r\n  );\r\n};\r\n"],"names":["ButtonOrderStyled","styled","props","mb","ButtonOrder","handleClickOrder","onClick","CartEmptySvgStyled","CartEmptySvg","viewBox","xmlns","id","d","CartEmptyStyled","CartEmpty","ButtonStyled","to","ArrowSvgStyled","rotate","active","ArrowSvg","height","width","fill","fillRule","CloseButtonSvgStyled","CloseButtonSvg","ChoiceRestorantStyled","OrderFormStyled","PickupFormStyled","OrderForm","orderVisible","formik","useFormik","onSubmit","data","console","log","alert","initialValues","orderType","addressRestaurant","name","phone","addressPickup","handleSubmit","map","index","type","value","values","onChange","setFieldValue","checked","htmlFor","required","e","target","address","DeleteSvgStyled","DeleteSvg","handleClick","enableBackground","version","cx","cy","r","stroke","strokeLinejoin","strokeMiterlimit","strokeWidth","x1","x2","y1","y2","ButtonCart","CartItemStyled","ItemInfoStyled","ItemChoiceStyled","DivForImg","ItemPropertiesStyled","CartItemPrice","CartItem","cartObj","dispatch","useAppDispatch","imageUrl","title","count","itemPropertyId","size","price","itemNameId","split","src","alt","typeNames","addItemToCart","sumTotalPrice","deleteItemCart","deleteSelectedItem","getTotalPrice","getTotalPizzas","CartIconSvgStyled","CartIconSvg","baseProfile","CartTitleStyled","CartTitleBottom","CartTitle","cartClear","CartContainer","CartStyled","Cart","useState","setOrderVisible","useAppSelector","state","cart","dataCart","totalPizzas","totalPrice","length","prev"],"sourceRoot":""}